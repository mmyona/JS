//변수와 스코프

var x; //함수 스코프 (function scope) : 즉, 함수를 기준으로 영역을 구분한다.
/*-> 잘 사용하지 않음
- 특징 -
1. 변수 이름 중복선언 가능,
2. 변수 선언 전에 사용 가능(호이스팅),
3. 함수 스코프
*/

/*-> 많이 사용하는 것들
- 특징 -
1. 변수 이름 중복선언 불가 (SyntaxError 발생)
2. 변수 선언 전에 사용 불가 (ReferenceError 발생)
3. 블록 스코프
*/
let y; // 블록 스코프 (block scope) : 중괄호로 감싸진 코드 블록에 따라 유효 범위를 구분
const z; //블록 스코프 (block scope) 
//const는 값 변경이 없는 경우에 (let과 차이점)

//함수 만드는 법
//1. 함수 선언식
function printHello(){
    console.log("Hello!");
}

//2. 함수 표현식
const sayBye=function(){ //함수 선언을 변수에 할당해주는 타입
    console.log("Bye!");
}
//함수 선언을 값처럼 활용하는 방식!! (**이게 포인트)

/*두 방식의 차이점
1 -> 호이스팅 O
    : 함수의 선언 이전에 함수 접근 가능
2 -> 호이스팅 X

1 -> 함수 스코프
    : 함수가 아닌 코드 블록(ex : if/ for ...)에서 함수를 선언하고 그 밖에서 호출했을 때, 정상적으로 작동
2 -> 할당된 변수의 타입에 따라(var, let ,const) 스코프가 결정됨
*/


